(function(){function d(b){b=b||{};if(!b.endpoint)throw"[warp] [ERROR] no endpoint defined!";this.channel=new d.Channel(b);this.params=b.params;this.ready=!1;this.buffer=[];var a=this;a.debug=b.debug?b.debug:!1;a.reconnectInterval=b.reconnectInterval?b.reconnectInterval:1E3;a.ssl=b.ssl?b.ssl:!1;a.ws=new ReconnectingWebSocket((b.ssl?"wss":"ws")+"://"+(b.endpoint+"/socket"),null,{debug:!1,reconnectInterval:a.reconnectInterval});a.ws.onopen=function(c){if(a.debug){var b={};b.type=c.type;b.timestamp=c.timeStamp;
console.info("[warp] open: "+JSON.stringify(b))}console.log(a.buffer);c=a.channel.all();a.debug&&console.log("[warp] reconnect to channels: "+JSON.stringify(c));0<c.length&&c.forEach(function(c){a._subscribe(c,a.channel.data[c])});a.ready=!0;a._sendBuffer()};a.ws.onclose=function(c){if(a.debug){var b={};b.type=c.type;b.timestamp=c.timeStamp;console.info("[warp]: "+JSON.stringify(b))}a.ready=!1};a.ws.onmessage=function(c){c=JSON.parse(c.data);a.debug&&console.debug("[warp] receive message: "+JSON.stringify(c));
c.channel&&a.channel.get(c.channel)?a.channel.get(c.channel)(c):c.sub&&a.channel.get(c.sub.channel)?a.channel.get(c.sub.channel)(c):c.unsub&&a.channel.get(c.unsub.channel)&&a.channel.get(c.unsub.channel)(c)};a.ws.onerror=function(c){a.debug&&(console.error("[warp] ERROR"),console.error(c))};a._sendJSON=function(c){a.debug&&console.debug("[warp] send message: "+JSON.stringify(c));a.ws.send(JSON.stringify(c))};a._sendBuffer=function(){a.buffer.forEach(function(c,b){setTimeout(function(){a._sendJSON(c)},
100)});a.buffer=[]};a._send=function(c,b){var d={};d.channel=c;d.timestamp=Date.now();this.params&&(d.params=this.params);d.msg=b;a.ready?a._sendJSON(d):a.buffer.push(d)};a._subscribe=function(b,d){var e={};e.subscribe=b;d&&(e.data=d);a._sendJSON(e)};a._close=function(){a.ws.close(1E3)}}d.prototype.subscribe=function(b,a,c){this.channel.add(b,a,c);this.ws.readyState&&this._subscribe(b,c)};d.prototype.unsubscribe=function(b){this.channel.remove(b)};d.prototype.beam=function(b,a){this._send(b,a)};d.prototype.allChannels=
function(){return this.channel.all()};d.prototype.close=function(){this._close()};d.prototype.status=function(){return this.ws.readyState};this.Warp=d}).call(this);
(function(){function d(b){b=b||{};this.debug=b.debug?b.debug:!1;this.channel={};this.data={}}d.prototype.add=function(b,a,c){this.channel[b]=a;this.data[b]=c;this.debug&&console.info("[warp]: subscribed to channel "+b)};d.prototype.get=function(b){return this.channel[b]};d.prototype.remove=function(b){delete this.channel[b];delete this.data[b]};d.prototype.all=function(){return Object.keys(this.channel)};Warp.Channel=d}).call(this);
