(function(){function d(a){a=a||{};if(!a.endpoint)throw"[warp] [ERROR] no endpoint defined!";this.channel=new d.Channel(a);this.params=a.params;this.ready=!1;this.buffer=[];var b=this;b.debug=a.debug?a.debug:!1;b.reconnectInterval=a.reconnectInterval?a.reconnectInterval:1E3;b.ssl=a.ssl?a.ssl:!1;b.ws=new ReconnectingWebSocket((a.ssl?"wss":"ws")+"://"+(a.endpoint+"/socket"),null,{debug:!1,reconnectInterval:b.reconnectInterval});b.ws.onopen=function(c){if(b.debug){var a={};a.type=c.type;a.timestamp=c.timeStamp;
console.info("[warp] open: "+JSON.stringify(a));console.log("[warp] buffer: "+JSON.stringify(b.buffer))}a=b.channel.all();b.debug&&console.log("[warp] reconnect to channels: "+JSON.stringify(a));0<a.length&&a.forEach(function(c){b._subscribe(c,b.channel.data[c])});b.ready=!0;b._sendBuffer();c=new Event("warp-open",c);document.dispatchEvent(c)};b.ws.onclose=function(c){if(b.debug){var a={};a.type=c.type;a.timestamp=c.timeStamp;console.info("[warp]: "+JSON.stringify(a))}b.ready=!1;c=new Event("warp-closed",
c);document.dispatchEvent(c)};b.ws.onmessage=function(c){c=JSON.parse(c.data);b.debug&&console.debug("[warp] receive message: "+JSON.stringify(c));c.channel&&b.channel.get(c.channel)?b.channel.get(c.channel)(c):c.sub&&b.channel.get(c.sub.channel)?b.channel.get(c.sub.channel)(c):c.unsub&&b.channel.get(c.unsub.channel)&&b.channel.get(c.unsub.channel)(c)};b.ws.onerror=function(c){b.debug&&(console.error("[warp] ERROR"),console.error(c));c=new Event("warp-error",c);document.dispatchEvent(c)};b._sendJSON=
function(c){b.debug&&console.debug("[warp] send message: "+JSON.stringify(c));b.ws.send(JSON.stringify(c))};b._sendBuffer=function(){b.buffer.forEach(function(c,a){setTimeout(function(){b._sendJSON(c)},100)});b.buffer=[]};b._send=function(c,a){var d={};d.channel=c;d.timestamp=Date.now();this.params&&(d.params=this.params);d.msg=a;b.ready?b._sendJSON(d):b.buffer.push(d)};b._subscribe=function(a,d){var e={};e.subscribe=a;d&&(e.data=d);b._sendJSON(e)};b._close=function(){b.ws.close(1E3)}}d.prototype.subscribe=
function(a,b,c){this.channel.add(a,b,c);this.ws.readyState&&this._subscribe(a,c)};d.prototype.unsubscribe=function(a){this.channel.remove(a)};d.prototype.beam=function(a,b){this._send(a,b)};d.prototype.allChannels=function(){return this.channel.all()};d.prototype.close=function(){this._close()};d.prototype.status=function(){return this.ws.readyState};this.Warp=d}).call(this);
(function(){function d(a){a=a||{};this.debug=a.debug?a.debug:!1;this.channel={};this.data={}}d.prototype.add=function(a,b,c){this.channel[a]=b;this.data[a]=c;this.debug&&console.info("[warp]: subscribed to channel "+a)};d.prototype.get=function(a){return this.channel[a]};d.prototype.remove=function(a){delete this.channel[a];delete this.data[a]};d.prototype.all=function(){return Object.keys(this.channel)};Warp.Channel=d}).call(this);
